__author__ = 'Павел Новиков (aka VokiVon)'

from sys import version
import platform

import Lesson_06.generator as gen

"""
Определить, какое число в массиве встречается чаще всего.
"""
"""
Результат:

[1, 1, 9, 8, 4, 5, 7, 2, 7, 5, 0, 6, 5, 0, 1, 4, 1, 9, 6, 1]
Число 1 встречается наибольшее количество (5) раз!

============================================================
Блок служебной информации по расчету занимаемой памяти
============================================================
Python version: 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)]
Архитектура системы: ('64bit', 'WindowsPE')
============================================================
Размер вычисленный через глобальную переменную: 832
============================================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Самый эффективный по использованию памяти алгоритм! 

"""


# переопределяем переменные генератора для получения дублей в массиве
# gen.min_item = 0
# gen.max_item = 9
# gen.size = 20
# arr_ = gen.gen_array()

arr_ = [1, 1, 9, 8, 4, 5, 7, 2, 7, 5, 0, 6, 5, 0, 1, 4, 1, 9, 6, 1]
print(arr_)


# Решаем через count() и нахождение максимума
freq_max = 1  # если максимум равен 1 значит элементы не повторяются
item_max = None

for item in arr_:
    temp = arr_.count(item)
    if temp > freq_max:
        freq_max = temp
        item_max = item

if item_max is not None:
    print(f'Число {item_max} встречается наибольшее количество ({freq_max}) раз!')
else:
    print('Элементы не повторяются')

# ======================================================
# блок служебной информации по расчету занимаемой памяти
print()
print('='*60)
print("Блок служебной информации по расчету занимаемой памяти")
print('='*60)

gen.global_size_inc(arr_)
gen.global_size_inc(freq_max)
gen.global_size_inc(item_max)

print(f"Python version: {version}")
print(f"Архитектура системы: {platform.architecture()}")

print('='*60)
print(f"Размер вычисленный через глобальную переменную: {gen.mem_size_counter}")
print('='*60)
